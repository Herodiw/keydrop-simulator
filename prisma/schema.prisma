datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String  @id @unique
  username     String  @unique
  passwordHash String
  inventory    Item[]
  balance      Float   @default(50)
  goldBalance  Int     @default(0)
  sandboxMode  Boolean @default(false)
}

model Item {
  owner         User                @relation(fields: [ownerId], references: [id])
  globalInvItem GlobalInventoryItem @relation(fields: [weaponName, skinName, skinQuality, skinPrice, skinRarity, skinImgSource, stattrack], references: [weaponName, skinName, skinQuality, skinPrice, skinRarity, skinImgSource, stattrack], onUpdate: Cascade)
  dropId        String              @id @unique
  ownerId       String
  origin        String
  weaponName    String
  skinName      String
  skinQuality   String
  skinPrice     Float
  skinRarity    String
  skinImgSource String
  stattrack     Boolean
  dropDate      DateTime            @default(now())
  sold          Boolean             @default(false)
  upgraded      Boolean             @default(false)
}

model Session {
  id     String @id @unique
  userId String
}

model Case {
  urlName     String  @id @unique
  websiteName String  @unique
  price       Float
  expired     Boolean @default(false)
  drops       Json[]
}

model GlobalInventoryItem {
  weaponName    String
  skinName      String
  skinQuality   String
  skinPrice     Float
  skinRarity    String
  skinImgSource String
  stattrack     Boolean @default(false)
  Item          Item[]

  @@unique([weaponName, skinName, skinQuality, stattrack])
  @@unique([weaponName, skinName, skinQuality, skinPrice, skinRarity, skinImgSource, stattrack])
}